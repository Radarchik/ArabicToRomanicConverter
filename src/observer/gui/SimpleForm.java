package observer.gui;

import observer.converter.UIMessages;
import observer.converter.Message;
import javax.swing.JOptionPane;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Logger;

/**
 *
 * @author tszin
 */
public class SimpleForm extends javax.swing.JFrame {

    private MyObservable observable;

    private class MyObservable extends Observable {

        @Override
        public void notifyObservers(Object arg) {
            setChanged();   //If the observable hasn't changed the notification will not happen
            super.notifyObservers(arg);
        }
    }

    /**
     * Creates new form SimpleForm
     */
    public SimpleForm() {
        observable = new MyObservable();
        initComponents();
    }

    public synchronized void addObserver(Observer o) {
        observable.addObserver(o);
    }

    public synchronized void deleteObserver(Observer o) {
        observable.deleteObserver(o);
    }

    private void notifyObservers(Object arg) {
        observable.notifyObservers(arg);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtResult = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Arabic-Roman converter");

        jLabel1.setText("Insert arabic numeral");

        jLabel2.setText("Insert roman numeral");

        jLabel3.setText("Result");

        btnSend.setText("Convert");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        jLabel4.setText("Created by Tarasz Szinyovics");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtField1)
                    .addComponent(txtField2)
                    .addComponent(txtResult)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSend, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSend)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSendActionPerformed
    {//GEN-HEADEREND:event_btnSendActionPerformed
        String txt1 = txtField1.getText().trim();
        String txt2 = txtField2.getText().trim();
        txtField1.setText("");
        txtField2.setText("");

        if (!txt1.isEmpty() && !txt2.isEmpty()) {
            String mes = "Input numeral into one field only!";
            JOptionPane.showMessageDialog(null, mes);
            txtResult.setText("");
        } else if (!txt1.isEmpty()) {
            try {
                if (Integer.parseInt(txt1) > 3999 || Integer.parseInt(txt1) < 1) {
                    String mes = "Input right number (1 - 3999)";
                    JOptionPane.showMessageDialog(null, mes);
                    txtResult.setText("");
                    return;
                }
                Message msg = new Message(UIMessages.CONVERT, txt1, txt2);
                notifyObservers(msg);
                txtResult.setText(msg.getResponse());
            } catch (NumberFormatException e) {
                String mes = "Input right number (1 - 3999)";
                JOptionPane.showMessageDialog(null, mes);
                txtResult.setText("");
            }

        } else if (!txt2.isEmpty()) {
            //checking whether input number contain more than 3 ordered repeating symbols
            if (txt2.matches("(.)\\1{3,}")) {
                String mes = "Wrong number";
                JOptionPane.showMessageDialog(null, mes);
                txtResult.setText("");
                return;
            }

            Message msg = new Message(UIMessages.CONVERT, txt1, txt2);
            notifyObservers(msg);
            String resp = msg.getResponse();
            if (resp.equals("Wrong number")) {
                JOptionPane.showMessageDialog(null, resp);
                txtResult.setText("");
            } else {
                txtResult.setText(msg.getResponse());
            }
        }
    }//GEN-LAST:event_btnSendActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtField1;
    private javax.swing.JTextField txtField2;
    private javax.swing.JTextField txtResult;
    // End of variables declaration//GEN-END:variables
}
